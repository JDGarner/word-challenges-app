----------------------------------------
1st Release
----------------------------------------

kindle definition
- add extra game mode coming soon disabled button (or add Synonyms?)

- Add image to splash screen
- Add gradient to splash screen?
- Add Game description to google play console
- Add Graphic assets to google play console

- Add sound effects:
  - Button taps (look at orixo and zentris)
  - Shuffle
  - Post Game
- add different dev and prod environments with different .env files (see config github)
- increase number of definitions/rhymes returned by API call (and buffer)
- make sure app handles gracefully if API returns error or improper object
- error reporting/tracking? (react native sentry)

Design:
- Think of new app icon and splash screen design for Monkey theme
  - Will probably want to use it in title as well
- Any other ways to incorporate monkey theme?

Get ui inspiration from Orixo
 - no border radius
 - no buttons at top of screen

- Release android app:
  - https://facebook.github.io/react-native/docs/signed-apk-android
  - https://developer.android.com/studio/publish
- test on ios device
- Release iOS app

Definitions:
- re-test retry logic with new difficulty levels

Rhymes:
- add info popup/tooltip about perfect rhymes with link to wiki
- review UI - answer grid item style, spacing on different screens, etc

Leaderboard/Stats:
- Improve UI for displaying rating on menu
  - maybe under button - small leaderboard icon: {score}
- Test on device - run from Android Studio?

Styling To Do:
- ellipses for long text? - in rhymes answer grid
- sort out spacing for different device sizes, make gap at top %
- countdown on iOS/android position
- look through each screen again carefully


iOS Release:
- Connect to game center for iOS

Testing:
- test/user test difficulty levels with different clue parameters
- test animation speeds/timings
- test button placement
- test different devices, small & big
- Check for handle on screen background bugs

Maybe in 1st release:
- Think about splitting definitions into 4 difficulties on BE, remove free letters for expert?
  - Words could then move fluidly between difficulty levels instead of being trapped (same for rhymes)
  - Then could also add lightbulb button to add free letters (reduces score when used)
- Add Synonyms mode
- Info icons on each mode to explain (including rating system/difficulty boundaries)
- Set different themes in settings menu?
- Handle leaderboard connection if network is down
- look into flipper/rn 0.62
- info about rating limits for each difficulty
- handle hardware back navigation
- keep track of perfect streak
  -> change praise words based on this/show streak




----------------------------------------
Future Release
----------------------------------------

General:
- Versus Mode
- For iOS add animating spheres also, don't use linear gradient?
- enableProguardInReleaseBuilds, enableSeparateBuildPerCPUArchitecture ?
  - look into how to see bundle size/app/apk size https://medium.com/@rishii.kumar.chawda/reduce-your-react-native-app-size-dramatically-5430d773c92f
- Decide on next game mode, Science definitions? Synonyms? (pick correct from random list of words)
- upgrade react native
- need a way to track which users got which words, 
  or at least add a counter for number of users that got a particular word
- does there need to be a timeout on the api?
- add X to loading state
- look into adding reselect
- look into making splash screen a gradient

Definitions:
- Look into whether rhymes all request approach would be better for definitions also (would increase response size)
- look into performance profiling (is everything being re-rendered when countdown ticks?)
- on shuffle fade out answer letters when they disappear?

Rhymes:
- Make get ready text fade in
- fade out countdown at end of game
- fix title moving a tiny bit from pre game -> game
- handle duplicate answer (shimmer/flash animation?)

Potential Features:
- add clues? (2 clues per round? - give first X letters?, give example?, give synonym?)
- add background animated spheres
- Other user stats - % correct, longest streak?

Potential Tweaks:
- Change countdown to pie timer?

Potential Refactors:
- Sort out game and round naming (round should be within a game)
- make countdown logic generic?
- could move ON_EXIT_GAME logic to listen to navigation event instead of timeout

----------------------------------------
Other
----------------------------------------

Name Ideas:
- Word master/ninja/binge/fiend/smith
- Wordy Something
- Word Binge
- Something like WordScapes/other word puns
- Endless/Infinite Vocabulary
- Uncommon Parlance
- Lexical Ninja
- Something - Vocabulary Trainer
  The Last Word - Vocabulary Trainer
  The Magic Word - Vocabulary Trainer
  Word Class - Vocabulary Trainer
  Word to the Wise - Vocabulary Trainer
  Word for Word - Vocabulary Trainer
  Words of Wisdom - Vocabulary Trainer
  Word Bird
  Word Pig
  Word Monkey

2nd Version:
- Compare users score to other players

Pro version with extra game modes? Or just ads?:
- See which might generate more money?

Other Game Modes:
- Words that are often used to describe...
https://www.wordsapi.com/ https://www.datamuse.com/api/
Greek letters mode, scientific symbols?, generic symbols?

Maybe:
- Add you missed suggestions
- add a way for user to contest/suggest rhyme





Potential Tests to write:
- Rhymes:
  - When current rhyme index reaches buffer, additional rhymes are loaded
  - When there is no next rhyme, connection error shows with retry
  - After retry success, new game is launched, in pregame state
  - Initial request succeeds > Game is playing > next request fails > retry succeeds > new game starts
- Definitions:
  - When current definition index reaches buffer, additional definitions are loaded
  - When there is no next definition, connection error shows with retry
  - After retry success, new game is launched, in playing state
  - Initial request succeeds > Game is playing > next request succeeds > new game starts with new definitions
  - Initial request succeeds > Game is playing > next request fails > retry succeeds > new game starts
  - Initial request fails > retry fails > retry succeeds > game starts



Design Inspiration:
https://github.com/catalinmiron/react-native-dribbble-app